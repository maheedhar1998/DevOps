---
# tasks file for zookeeper
- name: Yum -- Install git, wget, go, 
  yum:
    name:
      - git
      - wget
      - go

- name: Stat -- Check if Data is there
  stat:
    path: /home/ec2-user/data.tsv
  register: hasData

- name: Stat -- check kafka binaries
  stat:
    path: /home/ec2-user/kafka_2.13-2.7.0.tgz
  register: downloadedBinaries

- name: Command -- Download data file
  command: /usr/bin/wget https://datasets.imdbws.com/name.basics.tsv.gz
  when: hasData.stat.exists == False

- name: Command -- Extract the data file
  command: /usr/bin/gzip -d /home/ec2-user/name.basics.tsv.gz
  when: hasData.stat.exists == False

- name: Command -- Rename the data file
  command: /usr/bin/mv /home/ec2-user/name.basics.tsv /home/ec2-user/data.tsv
  when: hasData.stat.exists == False

- name: Command -- Installing Java enabling yum repo
  command: /usr/bin/amazon-linux-extras enable corretto8

- name: Yum -- Installing Java installing
  yum:
    name: java-1.8.0-amazon-corretto
    state: present

- name: Copy -- Copying Producer Go file
  copy:
    src: producer.go
    dest: /home/ec2-user/producer.go

- name: Command -- Installing necessary go libraries
  command: /usr/bin/go get -u -v github.com/confluentinc/confluent-kafka-go/kafka

- name: Command -- Building Go script binary
  command:
    cmd: /usr/bin/go build producer.go
    chdir: /home/ec2-user/
  notify:
    - Restart Producer Service

- name: Copy -- Copying Producer Service file
  copy:
    src: producer.service
    dest: /etc/systemd/system/producer.service
  notify:
    - Reload Daemons
    - Restart Producer Service

- name: Get_Url -- Downloading Kafka Binaries
  get_url:
    url: https://mirror.olnevhost.net/pub/apache/kafka/2.7.0/kafka_2.13-2.7.0.tgz
    dest: /home/ec2-user
  when: downloadedBinaries.stat.exists == False

- name: Command -- Extract the Kafka Binaries
  command:
    cmd: /usr/bin/tar -xvf kafka_2.13-2.7.0.tgz
    chdir: /home/ec2-user
  when: downloadedBinaries.stat.exists == False

- name: Command -- Create the neccessary directory
  command:
    cmd: /usr/bin/mkdir -p data/kafka data/zookeeper
    chdir: /home/ec2-user/kafka_2.13-2.7.0/

- name: Copy -- Copying Zookeeper Properties file
  copy:
    src: zookeeper.properties
    dest: /home/ec2-user/kafka_2.13-2.7.0/config/zookeeper.properties
  notify:
    - Restart Zookeeper Service

- name: Copy -- Copying Zookeeper Config file
  copy:
    src: zoo.cfg
    dest: /home/ec2-user/zoo.cfg
  notify:
    - Restart Zookeeper Service

- name: Template -- Template a file to kafka.properties
  template:
    src: kafka.properties.j2
    dest: /home/ec2-user/kafka_2.13-2.7.0/config/server.properties
  notify:
    - Restart Kafka Service

- name: Command -- Create myid file for each zookeeper node
  command: sh -c "echo {{broker_num}} > /home/ec2-user/kafka_2.13-2.7.0/data/zookeeper/myid"

- name: Copy -- Copying Zookeeper service file
  copy:
    src: zookeeper.service
    dest: /etc/systemd/system/zookeeper.service
  notify:
    - Reload Daemons
    - Restart Zookeeper Service

- name: Copy -- Copying Kafka service file
  copy:
    src: kafka.service
    dest: /etc/systemd/system/kafka.service
  notify:
    - Reload Daemons
    - Restart Kafka Service
